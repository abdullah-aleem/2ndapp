[{"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\pages\\signup.js":"1","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\services\\firebase.js":"2","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\pages\\playarea.js":"3","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\pages\\home.js":"4","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\pages\\login.js":"5","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\pages\\lobby.js":"6","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\reportWebVitals.js":"7","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\App.js":"8","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\index.js":"9","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\helpers\\globlvarlib.js":"10"},{"size":2260,"mtime":1609179749054,"results":"11","hashOfConfig":"12"},{"size":363,"mtime":1609167192440,"results":"13","hashOfConfig":"12"},{"size":14738,"mtime":1612375291305,"results":"14","hashOfConfig":"12"},{"size":1010,"mtime":1609262854048,"results":"15","hashOfConfig":"12"},{"size":3358,"mtime":1609179639233,"results":"16","hashOfConfig":"12"},{"size":3125,"mtime":1610271668646,"results":"17","hashOfConfig":"12"},{"size":362,"mtime":1609093810985,"results":"18","hashOfConfig":"12"},{"size":2569,"mtime":1610018309204,"results":"19","hashOfConfig":"12"},{"size":500,"mtime":1609093810985,"results":"20","hashOfConfig":"12"},{"size":549,"mtime":1609265265925,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"uebsjn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\pages\\signup.js",[],["51","52"],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\services\\firebase.js",[],["53","54"],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\pages\\playarea.js",["55","56","57","58","59","60","61","62"],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\pages\\home.js",[],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\pages\\login.js",["63","64"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signin, signInWithGoogle, signInWithGitHub } from \"../helpers/auth\";\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            email: \"\",\r\n            password: \"\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({ error: \"\" });\r\n        try {\r\n            await signin(this.state.email, this.state.password);\r\n        } catch (error) {\r\n            this.setState({ error: error.message });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form\r\n                    className=\"mt-5 py-5 px-5\"\r\n                    autoComplete=\"off\"\r\n                    onSubmit={this.handleSubmit}\r\n                >\r\n                    <h1>\r\n                        Login to\r\n            <Link className=\"title ml-2\" to=\"/\">\r\n                            Chatty\r\n            </Link>\r\n                    </h1>\r\n                    <p className=\"lead\">\r\n                        Fill in the form below to login to your account.\r\n          </p>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.email}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.password}\r\n                            type=\"password\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        {this.state.error ? (\r\n                            <p className=\"text-danger\">{this.state.error}</p>\r\n                        ) : null}\r\n                        <button className=\"btn btn-primary px-5\" type=\"submit\">Login</button>\r\n                    </div>\r\n                    <p>You can also log in with any of these services</p>\r\n                    <button className=\"btn btn-danger mr-2\" type=\"button\" onClick={this.googleSignIn}>\r\n                        Sign in with Google\r\n          </button>\r\n                    <button className=\"btn btn-secondary\" type=\"button\" onClick={this.githubSignIn}>\r\n                        Sign in with GitHub\r\n          </button>\r\n                    <hr />\r\n                    <p>\r\n                        Don't have an account? <Link to=\"/signup\">Sign up</Link>\r\n                    </p>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}",["65","66"],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\pages\\lobby.js",["67"],"import React, { Component } from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport socketIOClient from \"socket.io-client\";\r\nconst ENDPOINT = \"http://127.0.0.1:4001\";\r\nvar connectionOptions =  {\r\n    \"force new connection\" : true,\r\n    \"reconnectionAttempts\": \"Infinity\", //avoid having user reconnect manually in order to prevent dead clients after a server restart\r\n    \"timeout\" : 10000,                  //before connect_error and connect_timeout are emitted.\r\n    \"transports\" : [\"websocket\"]\r\n};\r\nexport default class Lobby extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            code: null,\r\n            joincode:null\r\n        };\r\n        this.CreateRoom = this.CreateRoom.bind(this);\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    async CreateRoom() {\r\n        const randomcode = Math.floor(Math.random() * 100000) + 1;\r\n        this.setState({\r\n            code: randomcode\r\n        }\r\n\r\n        );\r\n        // const requestOptions = {\r\n        //     method: 'POST',\r\n        //     headers: { 'Content-Type': 'application/json' },\r\n        //     body: JSON.stringify({\r\n        //         id: 0,\r\n        //         name: \"abdullah\",\r\n        //         active: true,\r\n        //         room: randomcode\r\n        //     })\r\n        // };\r\n        // const response = await fetch('https://localhost:5001/api/user', requestOptions);\r\n        // const data = await response.json();\r\n        // console.log(data);\r\n        // this.props.history.push(`/playarea/${data.room}`)\r\n\r\n    }\r\n    componentDidMount()\r\n    {\r\n\r\n    }\r\n    \r\n    handleChange(event){\r\n        this.setState({\r\n            joincode:event.target.value,\r\n        })\r\n    }\r\n    handleSubmit(event)\r\n    {\r\n        event.preventDefault();\r\n        if(!this.state.joincode){}\r\n        else\r\n        {\r\n            //connect with server and send him the code to the room the server will check the people in the room and then rply according\r\n            const socket = socketIOClient(ENDPOINT,connectionOptions);\r\n            socket.emit(\"Requesttojoinroom\",this.state.joincode,)  \r\n            socket.on(\"FromAPI\", data => {\r\n                console.log(data);  \r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <div>\r\n                    <h1>\r\n                        {this.state.code}\r\n                    </h1>\r\n                    <button onClick={this.CreateRoom}>\r\n                        Create Room\r\n                    </button>\r\n                    <form\r\n                        className=\"mt-5 py-5 px-5\"\r\n                        autoComplete=\"off\"\r\n                        onSubmit={this.handleSubmit}\r\n                    >\r\n                        <input onChange={this.handleChange} value={this.state.email}/>\r\n                        <button type=\"submit\"  >join room</button>\r\n                            \r\n                    </form>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}",["68","69"],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\reportWebVitals.js",[],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\App.js",["70"],"import React, { Component } from 'react';\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/home';\nimport Login from './pages/login';\nimport Signup from './pages/signup';\nimport Playarea from './pages/playarea';\nimport { auth } from './services/firebase';\nimport Lobby from './pages/lobby';\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => authenticated === true\n        ? <Component {...props} />\n        : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n    />\n  )\n}\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => authenticated === false\n        ? <Component {...props} />\n        : <Redirect to='/playarea' />}\n    />\n  )\n}\n\nclass App extends Component  {\n\n  constructor() {\n    super();\n    this.state = {\n        authenticated: false,\n        loading: true\n    };\n}\n\ncomponentDidMount() {\n  auth().onAuthStateChanged(user => {\n      if (user) {\n          this.setState({\n              authenticated: true,\n              loading: false\n          });\n      } else {\n          this.setState({\n              authenticated: false,\n              loading: false\n          });\n      }\n  });\n}\n\nrender() {\n  return this.state.loading === true ? (\n      <div className=\"spinner-border text-success\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n      </div>\n  ) : (\n \n          <Router>\n              <Switch>\n                  <Route exact path=\"/\" component={Home} />\n                  <PrivateRoute\n                      path=\"/playarea\"\n                      authenticated={this.state.authenticated}\n                      component={Playarea}\n                  />\n                  <PrivateRoute\n                      path=\"/lobby\"\n                      authenticated={this.state.authenticated}\n                      component={Lobby}\n                  />\n                  <PublicRoute\n                      path=\"/signup\"\n                      authenticated={this.state.authenticated}\n                      component={Signup}\n                  />\n                  <PublicRoute\n                      path=\"/login\"\n                      authenticated={this.state.authenticated}\n                      component={Login}\n                  />\n              </Switch>\n          </Router>\n      );\n}\n\n}\n\n\nexport default App;\n\n",["71","72"],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\index.js",[],["73","74"],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\Client\\src\\helpers\\globlvarlib.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"75","replacedBy":"79"},{"ruleId":"77","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":31},{"ruleId":"81","severity":1,"message":"85","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":15},{"ruleId":"81","severity":1,"message":"86","line":6,"column":10,"nodeType":"83","messageId":"84","endLine":6,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":287,"column":33,"nodeType":"89","endLine":287,"endColumn":78},{"ruleId":"87","severity":1,"message":"88","line":288,"column":33,"nodeType":"89","endLine":288,"endColumn":72},{"ruleId":"87","severity":1,"message":"88","line":289,"column":33,"nodeType":"89","endLine":289,"endColumn":71},{"ruleId":"87","severity":1,"message":"88","line":290,"column":33,"nodeType":"89","endLine":290,"endColumn":71},{"ruleId":"87","severity":1,"message":"88","line":291,"column":33,"nodeType":"89","endLine":291,"endColumn":71},{"ruleId":"81","severity":1,"message":"90","line":3,"column":18,"nodeType":"83","messageId":"84","endLine":3,"endColumn":34},{"ruleId":"81","severity":1,"message":"91","line":3,"column":36,"nodeType":"83","messageId":"84","endLine":3,"endColumn":52},{"ruleId":"75","replacedBy":"92"},{"ruleId":"77","replacedBy":"93"},{"ruleId":"81","severity":1,"message":"94","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":20},{"ruleId":"75","replacedBy":"95"},{"ruleId":"77","replacedBy":"96"},{"ruleId":"81","severity":1,"message":"97","line":8,"column":8,"nodeType":"83","messageId":"84","endLine":8,"endColumn":12},{"ruleId":"75","replacedBy":"98"},{"ruleId":"77","replacedBy":"99"},{"ruleId":"75","replacedBy":"100"},{"ruleId":"77","replacedBy":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],["102"],["103"],"no-unused-vars","'GlobalCounterProvider' is defined but never used.","Identifier","unusedVar","'Counter' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'signInWithGoogle' is defined but never used.","'signInWithGitHub' is defined but never used.",["102"],["103"],"'useHistory' is defined but never used.",["102"],["103"],"'logo' is defined but never used.",["102"],["103"],["102"],["103"],"no-global-assign","no-unsafe-negation"]