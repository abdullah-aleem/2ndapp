[{"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\pages\\playarea.js":"1","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\helpers\\Counter.js":"2","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\pages\\home.js":"3","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\App.js":"4","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\pages\\lobby.js":"5","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\pages\\signup.js":"6","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\pages\\login.js":"7","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\index.js":"8","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\services\\firebase.js":"9","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\helpers\\globlvarlib.js":"10","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\helpers\\auth.js":"11","C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\reportWebVitals.js":"12"},{"size":11737,"mtime":1610046196665,"results":"13","hashOfConfig":"14"},{"size":504,"mtime":1609313442483,"results":"15","hashOfConfig":"14"},{"size":1010,"mtime":1609262854048,"results":"16","hashOfConfig":"14"},{"size":2569,"mtime":1610018309204,"results":"17","hashOfConfig":"14"},{"size":3125,"mtime":1610017966821,"results":"18","hashOfConfig":"14"},{"size":2260,"mtime":1609179749054,"results":"19","hashOfConfig":"14"},{"size":3358,"mtime":1609179639233,"results":"20","hashOfConfig":"14"},{"size":500,"mtime":1609093810985,"results":"21","hashOfConfig":"14"},{"size":363,"mtime":1609167192440,"results":"22","hashOfConfig":"14"},{"size":549,"mtime":1609265265925,"results":"23","hashOfConfig":"14"},{"size":333,"mtime":1609179215127,"results":"24","hashOfConfig":"14"},{"size":362,"mtime":1609093810985,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"68wh9h",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\pages\\playarea.js",["58","59","60","61","62","63","64","65"],"import React, { Component } from 'react';\r\nimport { GlobalCounterProvider } from '../helpers/globalvar'\r\nimport Counter from '../helpers/Counter';\r\nimport { auth } from '../services/firebase';\r\nimport '../style.css';\r\nimport { Switch } from 'react-router-dom';\r\nimport socketIOClient from \"socket.io-client\";\r\nconst ENDPOINT = \"http://127.0.0.1:4001\";\r\nvar connectionOptions = {\r\n    \"force new connection\": true,\r\n    \"reconnectionAttempts\": \"Infinity\", //avoid having user reconnect manually in order to prevent dead clients after a server restart\r\n    \"timeout\": 10000,                  //before connect_error and connect_timeout are emitted.\r\n    \"transports\": [\"websocket\"]\r\n};\r\nconst socket = socketIOClient(ENDPOINT, connectionOptions);\r\nexport default class Playarea extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: null,\r\n            error: null,\r\n            user: auth().currentUser,\r\n            firstplayer: [{}],\r\n            Secondplayer: [{}],\r\n            thirdplayer: [{}],\r\n            forthplayer: [{}],\r\n            cards: Array(51).fill({ null: null }),\r\n            code: null,\r\n            joincode: null,\r\n            showRoom: null,\r\n            identity: {},\r\n\r\n        };\r\n        this.MakeCards = this.MakeCards.bind(this);\r\n        this.Showfirstplayercards = this.Showfirstplayercards.bind(this);\r\n        this.playCard = this.playCard.bind(this);\r\n        this.CreateRoom = this.CreateRoom.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    mapToCards(value) {\r\n        switch (value) {\r\n            case 11:\r\n                return 'J';\r\n\r\n            case 12:\r\n                return 'Q';\r\n\r\n            case 13:\r\n                return 'K';\r\n\r\n            case 14:\r\n                return 'A';\r\n\r\n            default:\r\n                return value;\r\n\r\n        }\r\n    }\r\n    MakeCards() {\r\n        let Tcards = []\r\n\r\n        //    const cards={};\r\n\r\n        for (let count = 0; count < 13; count++) {\r\n            Tcards[count] = {\r\n                name: \"Spades\",\r\n                title: this.mapToCards(count + 2),\r\n                value: count + 2,\r\n                class: \"suit Spade\"\r\n            }\r\n\r\n        }\r\n        for (let count = 13; count < 26; count++) {\r\n            Tcards[count] = {\r\n                name: \" Diamonds\",\r\n                title: this.mapToCards(count - 11),\r\n                value: count - 11,\r\n                class: \"suit diamonds\"\r\n            }\r\n\r\n        }\r\n        for (let count = 26; count < 39; count++) {\r\n            Tcards[count] = {\r\n                name: \"Heart\",\r\n                title: this.mapToCards(count - 24),\r\n                value: count - 24,\r\n                class: \"suit hearts\"\r\n            }\r\n\r\n        }\r\n        for (let count = 39; count < 52; count++) {\r\n            Tcards[count] = {\r\n                name: \"Clubs\",\r\n                title: this.mapToCards(count - 37),\r\n                value: count - 37,\r\n                class: \"suit clubs\"\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        const shuffled = Tcards.sort(() => 0.5 - Math.random());\r\n\r\n        this.setState({\r\n            firstplayer: shuffled.slice(0, 13),\r\n            secondplayer: shuffled.slice(13, 26),\r\n            thirdplayer: shuffled.slice(26, 39),\r\n            fourthplayer: shuffled.slice(39, 52),\r\n            cards: shuffled\r\n        })\r\n        console.log(shuffled);\r\n        return;\r\n\r\n    }\r\n    playCard(card) {\r\n\r\n\r\n\r\n        let deck1 = this.state.firstplayer;\r\n        let index = deck1.indexOf(card);\r\n        if (index !== -1) {\r\n            deck1.splice(index, 1);\r\n            this.setState({\r\n                firstplayer: deck1,\r\n                active: card\r\n            });\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    Showfirstplayercards() {\r\n        this.setState({\r\n            firstplayer: this.state.firstplayer\r\n        })\r\n        console.log(this.state.firstplayer);\r\n    }\r\n    async CreateRoom() {\r\n        const randomcode = Math.floor(Math.random() * 100000) + 1;\r\n        await this.setState({\r\n            code: randomcode,\r\n            identity: { name: 'kaleem', sendcode: randomcode, id: 1 },\r\n            showRoom: true\r\n        }\r\n\r\n        );\r\n        socket.emit(\"Requesttojoinroom\", this.state.identity);\r\n\r\n\r\n        // const requestOptions = {\r\n        //     method: 'POST',\r\n        //     headers: { 'Content-Type': 'application/json' },\r\n        //     body: JSON.stringify({\r\n        //         id: 0,\r\n        //         name: \"abdullah\",\r\n        //         active: true,\r\n        //         room: randomcode\r\n        //     })\r\n        // };\r\n        // const response = await fetch('https://localhost:5001/api/user', requestOptions);\r\n        // const data = await response.json();\r\n        // console.log(data);\r\n\r\n\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            joincode: parseInt(event.target.value),\r\n        })\r\n    }\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (!this.state.joincode) { }\r\n        else {\r\n           await this.setState({identity:{name:'kaleem',sendcode:this.state.joincode,id:null}})\r\n            //connect with server and send him the code to the room the server will check the people in the room and then rply according\r\n            socket.emit(\"Requesttojoinroom\", this.state.identity)\r\n            socket.on(\"FromAPI\", (data) => {\r\n                console.log(data);\r\n                this.setState({\r\n                    showRoom: data,\r\n                    })\r\n            }\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const cardsItems = this.state.firstplayer.map((card) =>\r\n\r\n            <div class=\"card\" onClick={() => { this.playCard(card) }}>\r\n                <div class=\"value\" card-value={card.value}>{card.title}\r\n                </div>\r\n                <div className={card.class}>\r\n                </div>\r\n            </div>\r\n        );\r\n        // displayCards(){\r\n        //     cardsItems.map()\r\n        // }\r\n        return (\r\n            <div>\r\n\r\n                <div style={{ display: !this.state.showRoom ? 'block' : 'none' }}>\r\n                    <div>\r\n                        <div>\r\n                            <h1>\r\n                                {this.state.code}\r\n                            </h1>\r\n                            <button onClick={this.CreateRoom}>\r\n                                Create Room\r\n                    </button>\r\n                            <form\r\n                                className=\"mt-5 py-5 px-5\"\r\n                                autoComplete=\"off\"\r\n                                onSubmit={this.handleSubmit}\r\n                            >\r\n                                <input onChange={this.handleChange} type='number' value={this.state.email} />\r\n                                <button type=\"submit\"  >join room</button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: this.state.showRoom ? 'block' : 'none' }}>\r\n                    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\r\n                        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span class=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                            <div class=\"navbar-nav\">\r\n                                <a class=\"nav-item nav-link active\" href=\"#\">Rang card game</a>\r\n                                <a class=\"nav-item nav-link\" href=\"#\" onClick={this.MakeCards}>Distribute</a>\r\n                                <a class=\"nav-item nav-link\" href=\"#\">declare winner</a>\r\n                                <a class=\"nav-item nav-link\" href=\"#\">Endgame</a>\r\n                                <a class=\"nav-item nav-link\" href=\"#\">Choose 1 player</a>\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                    <div>\r\n                        {this.state.user.email}\r\n                    </div>\r\n                    <div className='count'>\r\n                        <button type=\"button\" class=\" mb-3 btn btn-success\">\r\n                            Players online: <span class=\"badge badge-light\"> {this.state.count}</span>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"card text-white bg-primary mb-3\" style={{ 'max-width': '18rem', 'float': 'left' }}>\r\n                            <div class=\"card-header\">Player 1</div>\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">\r\n\r\n                                </h5>\r\n                                <p class=\"card-text\">\r\n                                    {this.state.user.email}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"deck\">\r\n                            <div class=\"card\" >\r\n                                <div class=\"value\">{this.state.active != null ? this.state.active.title : ''}\r\n                                </div>\r\n                                <div className={this.state.active != null ? this.state.active.class : ''}>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-4 mb-3\"></div>\r\n                        <div class=\"col-4 mb-3\"></div>\r\n                        <div class=\"card text-white bg-primary mb-3\" style={{ 'max-width': '18rem', 'float': 'right' }}>\r\n                            <div class=\"card-header\">Player 2</div>\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">\r\n\r\n                                </h5>\r\n                                <p class=\"card-text\">cards coming...</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"card text-white bg-primary mb-3\" style={{ 'max-width': '18rem', 'float': 'left' }}>\r\n                            <div class=\"card-header\">Player 3</div>\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">\r\n\r\n                                </h5>\r\n                                <p class=\"card-text\">cards coming...</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-4 mb-3\"></div>\r\n                        <div class=\"col-4 mb-3\"></div>\r\n                        <div class=\"card text-white bg-primary mb-3\" style={{ 'max-width': '18rem', 'float': 'right' }}>\r\n                            <div class=\"card-header\">Player 4</div>\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">\r\n\r\n                                </h5>\r\n                                <p class=\"card-text\">cards coming...</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"deck\">\r\n                        {cardsItems}\r\n                    </div>\r\n                </div >\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n",["66","67"],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\helpers\\Counter.js",["68","69"],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\pages\\home.js",[],["70","71"],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\App.js",["72"],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\pages\\lobby.js",["73"],"import React, { Component } from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport socketIOClient from \"socket.io-client\";\r\nconst ENDPOINT = \"http://127.0.0.1:4001\";\r\nvar connectionOptions =  {\r\n    \"force new connection\" : true,\r\n    \"reconnectionAttempts\": \"Infinity\", //avoid having user reconnect manually in order to prevent dead clients after a server restart\r\n    \"timeout\" : 10000,                  //before connect_error and connect_timeout are emitted.\r\n    \"transports\" : [\"websocket\"]\r\n};\r\nexport default class Lobby extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            code: null,\r\n            joincode:null\r\n        };\r\n        this.CreateRoom = this.CreateRoom.bind(this);\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    async CreateRoom() {\r\n        const randomcode = Math.floor(Math.random() * 100000) + 1;\r\n        this.setState({\r\n            code: randomcode\r\n        }\r\n\r\n        );\r\n        // const requestOptions = {\r\n        //     method: 'POST',\r\n        //     headers: { 'Content-Type': 'application/json' },\r\n        //     body: JSON.stringify({\r\n        //         id: 0,\r\n        //         name: \"abdullah\",\r\n        //         active: true,\r\n        //         room: randomcode\r\n        //     })\r\n        // };\r\n        // const response = await fetch('https://localhost:5001/api/user', requestOptions);\r\n        // const data = await response.json();\r\n        // console.log(data);\r\n        // this.props.history.push(`/playarea/${data.room}`)\r\n\r\n    }\r\n    componentDidMount()\r\n    {\r\n\r\n    }\r\n    \r\n    handleChange(event){\r\n        this.setState({\r\n            joincode:event.target.value,\r\n        })\r\n    }\r\n    handleSubmit(event)\r\n    {\r\n        event.preventDefault();\r\n        if(!this.state.joincode){}\r\n        else\r\n        {\r\n            //connect with server and send him the code to the room the server will check the people in the room and then rply according\r\n            const socket = socketIOClient(ENDPOINT,connectionOptions);\r\n            socket.emit(\"Requesttojoinroom\",this.state.joincode,)  \r\n            socket.on(\"FromAPI\", data => {\r\n                console.log(data);  \r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <div>\r\n                    <h1>\r\n                        {this.state.code}\r\n                    </h1>\r\n                    <button onClick={this.CreateRoom}>\r\n                        Create Room\r\n                    </button>\r\n                    <form\r\n                        className=\"mt-5 py-5 px-5\"\r\n                        autoComplete=\"off\"\r\n                        onSubmit={this.handleSubmit}\r\n                    >\r\n                        <input onChange={this.handleChange} value={this.state.email}/>\r\n                        <button type=\"submit\"  >join room</button>\r\n                            \r\n                    </form>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}",["74","75"],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\pages\\signup.js",[],["76","77"],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\pages\\login.js",["78","79"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signin, signInWithGoogle, signInWithGitHub } from \"../helpers/auth\";\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            email: \"\",\r\n            password: \"\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({ error: \"\" });\r\n        try {\r\n            await signin(this.state.email, this.state.password);\r\n        } catch (error) {\r\n            this.setState({ error: error.message });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form\r\n                    className=\"mt-5 py-5 px-5\"\r\n                    autoComplete=\"off\"\r\n                    onSubmit={this.handleSubmit}\r\n                >\r\n                    <h1>\r\n                        Login to\r\n            <Link className=\"title ml-2\" to=\"/\">\r\n                            Chatty\r\n            </Link>\r\n                    </h1>\r\n                    <p className=\"lead\">\r\n                        Fill in the form below to login to your account.\r\n          </p>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.email}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.password}\r\n                            type=\"password\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        {this.state.error ? (\r\n                            <p className=\"text-danger\">{this.state.error}</p>\r\n                        ) : null}\r\n                        <button className=\"btn btn-primary px-5\" type=\"submit\">Login</button>\r\n                    </div>\r\n                    <p>You can also log in with any of these services</p>\r\n                    <button className=\"btn btn-danger mr-2\" type=\"button\" onClick={this.googleSignIn}>\r\n                        Sign in with Google\r\n          </button>\r\n                    <button className=\"btn btn-secondary\" type=\"button\" onClick={this.githubSignIn}>\r\n                        Sign in with GitHub\r\n          </button>\r\n                    <hr />\r\n                    <p>\r\n                        Don't have an account? <Link to=\"/signup\">Sign up</Link>\r\n                    </p>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}",["80","81"],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\index.js",[],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\services\\firebase.js",[],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\helpers\\globlvarlib.js",[],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\helpers\\auth.js",[],"C:\\Users\\Abdullah Aleem\\Documents\\Programing\\test\\src\\reportWebVitals.js",[],{"ruleId":"82","severity":1,"message":"83","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":31},{"ruleId":"82","severity":1,"message":"86","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":15},{"ruleId":"82","severity":1,"message":"87","line":6,"column":10,"nodeType":"84","messageId":"85","endLine":6,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":241,"column":33,"nodeType":"90","endLine":241,"endColumn":78},{"ruleId":"88","severity":1,"message":"89","line":242,"column":33,"nodeType":"90","endLine":242,"endColumn":96},{"ruleId":"88","severity":1,"message":"89","line":243,"column":33,"nodeType":"90","endLine":243,"endColumn":71},{"ruleId":"88","severity":1,"message":"89","line":244,"column":33,"nodeType":"90","endLine":244,"endColumn":71},{"ruleId":"88","severity":1,"message":"89","line":245,"column":33,"nodeType":"90","endLine":245,"endColumn":71},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"82","severity":1,"message":"95","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"96","line":5,"column":19,"nodeType":"84","messageId":"85","endLine":5,"endColumn":27},{"ruleId":"91","replacedBy":"97"},{"ruleId":"93","replacedBy":"98"},{"ruleId":"82","severity":1,"message":"99","line":8,"column":8,"nodeType":"84","messageId":"85","endLine":8,"endColumn":12},{"ruleId":"82","severity":1,"message":"100","line":3,"column":10,"nodeType":"84","messageId":"85","endLine":3,"endColumn":20},{"ruleId":"91","replacedBy":"101"},{"ruleId":"93","replacedBy":"102"},{"ruleId":"91","replacedBy":"103"},{"ruleId":"93","replacedBy":"104"},{"ruleId":"82","severity":1,"message":"105","line":3,"column":18,"nodeType":"84","messageId":"85","endLine":3,"endColumn":34},{"ruleId":"82","severity":1,"message":"106","line":3,"column":36,"nodeType":"84","messageId":"85","endLine":3,"endColumn":52},{"ruleId":"91","replacedBy":"107"},{"ruleId":"93","replacedBy":"108"},"no-unused-vars","'GlobalCounterProvider' is defined but never used.","Identifier","unusedVar","'Counter' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["109"],"no-negated-in-lhs",["110"],"'useEffect' is defined but never used.","'setState' is assigned a value but never used.",["109"],["110"],"'logo' is defined but never used.","'useHistory' is defined but never used.",["109"],["110"],["109"],["110"],"'signInWithGoogle' is defined but never used.","'signInWithGitHub' is defined but never used.",["109"],["110"],"no-global-assign","no-unsafe-negation"]